# Generated by Django 4.2.16 on 2025-04-17 12:10

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='All_Gtt_Whot_Cards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(blank=True, max_length=100, null=True)),
                ('card_shape', models.CharField(blank=True, max_length=100, null=True)),
                ('card_image', models.ImageField(blank=True, null=True, upload_to='All_Gtt_Whot_Cards')),
                ('has_power', models.BooleanField(blank=True, default=False, null=True)),
                ('requirement', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Special_Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('opponent', models.CharField(blank=True, max_length=100, null=True)),
                ('game_id', models.IntegerField(blank=True, default=0, null=True)),
                ('user_card', models.CharField(blank=True, max_length=100, null=True)),
                ('exchanged_card', models.CharField(blank=True, max_length=100, null=True)),
                ('challenge_stake_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('challenge_winning_amount', models.CharField(blank=True, max_length=100, null=True)),
                ('time', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gtt_Whot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_time', models.IntegerField(blank=True, default=30, null=True)),
                ('number_of_general_market', models.CharField(blank=True, max_length=100, null=True)),
                ('player_one', models.CharField(blank=True, max_length=100, null=True)),
                ('player_one_number_of_cards', models.CharField(blank=True, max_length=1000, null=True)),
                ('player_two', models.CharField(blank=True, max_length=100, null=True)),
                ('player_two_number_of_cards', models.CharField(blank=True, max_length=1000, null=True)),
                ('game_charges', models.IntegerField(blank=True, default=0, null=True)),
                ('user_can_play', models.BooleanField(blank=True, default=True, null=True)),
                ('to_play', models.CharField(blank=True, max_length=1000, null=True)),
                ('game_reload', models.BooleanField(blank=True, default=False, null=True)),
                ('required_to_pick', models.BooleanField(blank=True, default=False, null=True)),
                ('hold_on', models.BooleanField(blank=True, default=False, null=True)),
                ('how_many_required_to_pick', models.IntegerField(blank=True, default=0, null=True)),
                ('player_required_to_pick', models.CharField(blank=True, max_length=1000, null=True)),
                ('has_tie', models.BooleanField(blank=True, default=False, null=True)),
                ('game_finished', models.BooleanField(blank=True, default=False, null=True)),
                ('game_concluded', models.BooleanField(blank=True, default=False, null=True)),
                ('game_winner', models.CharField(blank=True, max_length=1000, null=True)),
                ('counted_cards', models.BooleanField(blank=True, default=False, null=True)),
                ('player_one_amount_of_cards', models.IntegerField(blank=True, default=0, null=True)),
                ('player_two_amount_of_cards', models.IntegerField(blank=True, default=0, null=True)),
                ('player_won', models.BooleanField(blank=True, default=False, null=True)),
                ('current_card', models.ManyToManyField(blank=True, related_name='Current_Card', to='gttWhott.all_gtt_whot_cards')),
                ('general_market', models.ManyToManyField(blank=True, related_name='General_Market', to='gttWhott.all_gtt_whot_cards')),
                ('player_one_cards', models.ManyToManyField(blank=True, related_name='Player_One', to='gttWhott.all_gtt_whot_cards')),
                ('player_two_cards', models.ManyToManyField(blank=True, related_name='Player_Two', to='gttWhott.all_gtt_whot_cards')),
            ],
        ),
    ]
